% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bs_search.R
\name{bs_search}
\alias{bs_meta}
\alias{bs_search}
\title{Search BASE}
\usage{
bs_search(query = NULL, target = NULL, coll = NULL, boost = NULL,
  hits = NULL, offset = NULL, fields = NULL, sortby = NULL,
  raw = FALSE, parse = "df", ...)

bs_meta(x)
}
\arguments{
\item{query}{(character) query string}

\item{target}{(character) target code}

\item{coll}{(character) collection code}

\item{boost}{(character) boost string}

\item{hits}{(integer) number of results to return}

\item{offset}{(integer) record to start at}

\item{fields}{(character) Fields to return. This doesn't appear to be
working though.}

\item{sortby}{(character) field to sort by}

\item{raw}{(logical) If \code{TRUE} returns raw XML, default: \code{FALSE}}

\item{parse}{(character) One of 'list' or 'df'}

\item{...}{curl options passed on to \code{\link[crul]{HttpClient}}}

\item{x}{input to \code{bs_meta}}
}
\value{
XML as character string if \code{parse=FALSE} or data.frame
}
\description{
Search BASE
}
\details{
BASE asks that requests are not more frequent than 1 per second,
so we enforce the rate limit internally. if you do a single request not
in a for loop/lapply type situation, this won't be inoked, but will
if doing a for loop/lapply call, and there's no sleep invoked
}
\examples{
\dontrun{
# repository "ftubbiepub" containing the terms
# "lossau" and "summann" (search in the whole document)
res <- bs_search(target = 'ftubbiepub', query = 'lossau summann')
res
res$dcsubject
res$dccreator
res$dcidentifier
attributes(res)
bs_meta(res)

# Italian repositories containing the term "manghi'
# in the "dccreator" field (author).  The flag "boost" pushes open
# access documents upwards in the result list
(res <- bs_search(coll = 'it', query = 'dccreator:manghi', boost = "oa"))

# terms "schmidt" in dccreator field (author) and "biology" in dctitle.
# The response starts after record 5 (offset=5) and contains max.
# 5 hits with the fields dctitle, dccreator and dcyear
(res <- bs_search(query = 'dccreator:schmidt dctitle:biology',
  hits = 5, offset = 5, fields = c('dctitle', 'dccreator', 'dcyear')))

# term "unix" and published between 1983 and 2009, sorted by year
# of publication (dcyear) in descending order
(res <- bs_search(query = 'unix dcyear:[1983 TO 2009]',
  sortby = 'dcyear desc'))

# raw XML output
bs_search(target = 'ftubbiepub', query = 'lossau summann', raw = TRUE)

# list output
bs_search(target = 'ftubbiepub', query = 'lossau summann', parse = "list")

out <- list()
system.time(
for (i in 1:3) {
  out[[i]] <- bs_search(target = 'ftubbiepub', query = 'lossau summann', hits = 1)
}
)
out
}
}

